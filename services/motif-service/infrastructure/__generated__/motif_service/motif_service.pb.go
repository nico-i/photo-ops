// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: motif_service/motif_service.proto

package proto

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Image:
	//
	//	*ImageRequest_Path
	//	*ImageRequest_Base64
	Image        isImageRequest_Image `protobuf_oneof:"image"`
	DebugDirPath string               `protobuf:"bytes,3,opt,name=debug_dir_path,json=debugDirPath,proto3" json:"debug_dir_path,omitempty"`
}

func (x *ImageRequest) Reset() {
	*x = ImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_motif_service_motif_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRequest) ProtoMessage() {}

func (x *ImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_motif_service_motif_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRequest.ProtoReflect.Descriptor instead.
func (*ImageRequest) Descriptor() ([]byte, []int) {
	return file_motif_service_motif_service_proto_rawDescGZIP(), []int{0}
}

func (m *ImageRequest) GetImage() isImageRequest_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (x *ImageRequest) GetPath() string {
	if x, ok := x.GetImage().(*ImageRequest_Path); ok {
		return x.Path
	}
	return ""
}

func (x *ImageRequest) GetBase64() string {
	if x, ok := x.GetImage().(*ImageRequest_Base64); ok {
		return x.Base64
	}
	return ""
}

func (x *ImageRequest) GetDebugDirPath() string {
	if x != nil {
		return x.DebugDirPath
	}
	return ""
}

type isImageRequest_Image interface {
	isImageRequest_Image()
}

type ImageRequest_Path struct {
	Path string `protobuf:"bytes,1,opt,name=path,proto3,oneof"`
}

type ImageRequest_Base64 struct {
	Base64 string `protobuf:"bytes,2,opt,name=base64,proto3,oneof"`
}

func (*ImageRequest_Path) isImageRequest_Image() {}

func (*ImageRequest_Base64) isImageRequest_Image() {}

// The response message containing bounding box coordinates.
type BoundingBoxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y      int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Width  int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *BoundingBoxResponse) Reset() {
	*x = BoundingBoxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_motif_service_motif_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoundingBoxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoundingBoxResponse) ProtoMessage() {}

func (x *BoundingBoxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_motif_service_motif_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoundingBoxResponse.ProtoReflect.Descriptor instead.
func (*BoundingBoxResponse) Descriptor() ([]byte, []int) {
	return file_motif_service_motif_service_proto_rawDescGZIP(), []int{1}
}

func (x *BoundingBoxResponse) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *BoundingBoxResponse) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *BoundingBoxResponse) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *BoundingBoxResponse) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

var File_motif_service_motif_service_proto protoreflect.FileDescriptor

var file_motif_service_motif_service_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x6f, 0x74, 0x69, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x6d, 0x6f, 0x74, 0x69, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x74, 0x69, 0x66, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x04, 0x0a, 0x0c, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5d, 0x92, 0x41, 0x5a, 0x32, 0x37, 0x54, 0x68,
	0x65, 0x20, 0x70, 0x61, 0x74, 0x68, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x4a, 0x16, 0x22, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x6a, 0x70, 0x67, 0x22, 0xa2, 0x02, 0x06,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0xb7,
	0x01, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x9c, 0x01, 0x92, 0x41, 0x98, 0x01, 0x32, 0x21, 0x54, 0x68, 0x65, 0x20, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x20, 0x69,
	0x6e, 0x20, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x2e, 0x4a, 0x6a, 0x22, 0x69, 0x56, 0x42, 0x4f,
	0x52, 0x77, 0x30, 0x4b, 0x47, 0x67, 0x6f, 0x41, 0x41, 0x41, 0x41, 0x4e, 0x53, 0x55, 0x68, 0x45,
	0x55, 0x67, 0x41, 0x41, 0x41, 0x41, 0x6f, 0x41, 0x41, 0x41, 0x41, 0x4b, 0x43, 0x41, 0x59, 0x41,
	0x41, 0x41, 0x43, 0x4e, 0x4d, 0x73, 0x2b, 0x39, 0x41, 0x41, 0x41, 0x41, 0x46, 0x55, 0x6c, 0x45,
	0x51, 0x56, 0x52, 0x34, 0x32, 0x6d, 0x50, 0x38, 0x7a, 0x38, 0x42, 0x51, 0x7a, 0x30, 0x41, 0x45,
	0x59, 0x42, 0x78, 0x56, 0x53, 0x46, 0x2b, 0x46, 0x41, 0x42, 0x4a, 0x41, 0x44, 0x76, 0x65, 0x57,
	0x6b, 0x48, 0x36, 0x6f, 0x41, 0x41, 0x41, 0x41, 0x41, 0x45, 0x6c, 0x46, 0x54, 0x6b, 0x53, 0x75,
	0x51, 0x6d, 0x43, 0x43, 0x22, 0xa2, 0x02, 0x06, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x48, 0x00,
	0x52, 0x06, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0xc6, 0x01, 0x0a, 0x0e, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x9f, 0x01, 0x92, 0x41, 0x9b, 0x01, 0x32, 0x7b, 0x54, 0x68, 0x65, 0x20, 0x70, 0x61,
	0x74, 0x68, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x20, 0x74, 0x6f, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x20, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20,
	0x73, 0x61, 0x76, 0x65, 0x64, 0x2e, 0x20, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x6f, 0x66,
	0x20, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x3a, 0x20, 0x3c, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x3e, 0x5f, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x2e, 0x70, 0x6e, 0x67, 0x4a, 0x13, 0x22, 0x2f, 0x68, 0x6f, 0x6d, 0x65, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x22, 0xa2, 0x02, 0x06, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x44, 0x69, 0x72, 0x50, 0x61, 0x74,
	0x68, 0x42, 0x07, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xf0, 0x02, 0x0a, 0x13, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x62, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x54, 0x92,
	0x41, 0x51, 0x32, 0x42, 0x54, 0x68, 0x65, 0x20, 0x78, 0x20, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x20,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x74, 0x6f, 0x70, 0x20, 0x6c, 0x65, 0x66, 0x74, 0x20, 0x63, 0x6f, 0x72, 0x6e, 0x65,
	0x72, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x20, 0x62, 0x6f, 0x78, 0x2e, 0x4a, 0x03, 0x31, 0x30, 0x30, 0xa2, 0x02, 0x05, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x52, 0x01, 0x78, 0x12, 0x62, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x54, 0x92, 0x41, 0x51, 0x32, 0x42, 0x54, 0x68, 0x65, 0x20, 0x79, 0x20, 0x70, 0x69,
	0x78, 0x65, 0x6c, 0x20, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x70, 0x20, 0x6c, 0x65, 0x66, 0x74, 0x20, 0x63,
	0x6f, 0x72, 0x6e, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x6f, 0x78, 0x2e, 0x4a, 0x03, 0x31, 0x30, 0x30, 0xa2,
	0x02, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x01, 0x79, 0x12, 0x46, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x30, 0x92, 0x41, 0x2d, 0x32, 0x1e,
	0x54, 0x68, 0x65, 0x20, 0x77, 0x69, 0x64, 0x74, 0x68, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x20, 0x62, 0x6f, 0x78, 0x2e, 0x4a, 0x03,
	0x31, 0x30, 0x30, 0xa2, 0x02, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x49, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x31, 0x92, 0x41, 0x2e, 0x32, 0x1f, 0x54, 0x68, 0x65, 0x20, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x20, 0x62, 0x6f, 0x78, 0x2e, 0x4a, 0x03, 0x31, 0x30, 0x30, 0xa2, 0x02, 0x05,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x32, 0x66, 0x0a,
	0x0c, 0x4d, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x12,
	0x13, 0x2e, 0x6d, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x6f, 0x74, 0x69, 0x66, 0x2e, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x22, 0x08, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x62, 0x6f, 0x78, 0x42, 0x84, 0x01, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x6f,
	0x74, 0x69, 0x66, 0x42, 0x11, 0x4d, 0x6f, 0x74, 0x69, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x63, 0x6f, 0x2d, 0x69, 0x2f, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x2d, 0x6f, 0x70, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d,
	0x6f, 0x74, 0x69, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58,
	0xaa, 0x02, 0x05, 0x4d, 0x6f, 0x74, 0x69, 0x66, 0xca, 0x02, 0x05, 0x4d, 0x6f, 0x74, 0x69, 0x66,
	0xe2, 0x02, 0x11, 0x4d, 0x6f, 0x74, 0x69, 0x66, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x05, 0x4d, 0x6f, 0x74, 0x69, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_motif_service_motif_service_proto_rawDescOnce sync.Once
	file_motif_service_motif_service_proto_rawDescData = file_motif_service_motif_service_proto_rawDesc
)

func file_motif_service_motif_service_proto_rawDescGZIP() []byte {
	file_motif_service_motif_service_proto_rawDescOnce.Do(func() {
		file_motif_service_motif_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_motif_service_motif_service_proto_rawDescData)
	})
	return file_motif_service_motif_service_proto_rawDescData
}

var file_motif_service_motif_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_motif_service_motif_service_proto_goTypes = []interface{}{
	(*ImageRequest)(nil),        // 0: motif.ImageRequest
	(*BoundingBoxResponse)(nil), // 1: motif.BoundingBoxResponse
}
var file_motif_service_motif_service_proto_depIdxs = []int32{
	0, // 0: motif.MotifService.GetBoundingBox:input_type -> motif.ImageRequest
	1, // 1: motif.MotifService.GetBoundingBox:output_type -> motif.BoundingBoxResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_motif_service_motif_service_proto_init() }
func file_motif_service_motif_service_proto_init() {
	if File_motif_service_motif_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_motif_service_motif_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_motif_service_motif_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoundingBoxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_motif_service_motif_service_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ImageRequest_Path)(nil),
		(*ImageRequest_Base64)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_motif_service_motif_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_motif_service_motif_service_proto_goTypes,
		DependencyIndexes: file_motif_service_motif_service_proto_depIdxs,
		MessageInfos:      file_motif_service_motif_service_proto_msgTypes,
	}.Build()
	File_motif_service_motif_service_proto = out.File
	file_motif_service_motif_service_proto_rawDesc = nil
	file_motif_service_motif_service_proto_goTypes = nil
	file_motif_service_motif_service_proto_depIdxs = nil
}
