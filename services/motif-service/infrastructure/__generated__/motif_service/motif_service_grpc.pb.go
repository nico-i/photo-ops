// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: motif_service/motif_service.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MotifService_GetBoundingBox_FullMethodName = "/motif.MotifService/GetBoundingBox"
)

// MotifServiceClient is the client API for MotifService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MotifServiceClient interface {
	// Returns bounding box information for the subject in the image.
	GetBoundingBox(ctx context.Context, in *ImageRequest, opts ...grpc.CallOption) (*BoundingBoxResponse, error)
}

type motifServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMotifServiceClient(cc grpc.ClientConnInterface) MotifServiceClient {
	return &motifServiceClient{cc}
}

func (c *motifServiceClient) GetBoundingBox(ctx context.Context, in *ImageRequest, opts ...grpc.CallOption) (*BoundingBoxResponse, error) {
	out := new(BoundingBoxResponse)
	err := c.cc.Invoke(ctx, MotifService_GetBoundingBox_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MotifServiceServer is the server API for MotifService service.
// All implementations must embed UnimplementedMotifServiceServer
// for forward compatibility
type MotifServiceServer interface {
	// Returns bounding box information for the subject in the image.
	GetBoundingBox(context.Context, *ImageRequest) (*BoundingBoxResponse, error)
	mustEmbedUnimplementedMotifServiceServer()
}

// UnimplementedMotifServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMotifServiceServer struct {
}

func (UnimplementedMotifServiceServer) GetBoundingBox(context.Context, *ImageRequest) (*BoundingBoxResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBoundingBox not implemented")
}
func (UnimplementedMotifServiceServer) mustEmbedUnimplementedMotifServiceServer() {}

// UnsafeMotifServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MotifServiceServer will
// result in compilation errors.
type UnsafeMotifServiceServer interface {
	mustEmbedUnimplementedMotifServiceServer()
}

func RegisterMotifServiceServer(s grpc.ServiceRegistrar, srv MotifServiceServer) {
	s.RegisterService(&MotifService_ServiceDesc, srv)
}

func _MotifService_GetBoundingBox_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MotifServiceServer).GetBoundingBox(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MotifService_GetBoundingBox_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MotifServiceServer).GetBoundingBox(ctx, req.(*ImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MotifService_ServiceDesc is the grpc.ServiceDesc for MotifService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MotifService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "motif.MotifService",
	HandlerType: (*MotifServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBoundingBox",
			Handler:    _MotifService_GetBoundingBox_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "motif_service/motif_service.proto",
}
